#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 8.0 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 34 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mrl"
 #"ib\"))\x00"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 79
(1
 #"((lib \"srcloc-snip.rkt\" \"framework\") (lib \"wxme-srcloc-snip.rkt"
 #"\" \"framework\"))\x00"
) 1 0 93
(2
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-snip"
 #"class-wxme.ss\" \"framework\"))\x00"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(3
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsis"
 #"-snip-wxme.rkt\" \"drracket\" \"private\"))\x00"
) 2 0 88
(4
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.rk"
 #"t\" \"drracket\" \"private\"))\x00"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 112 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 100 149 237 0 0 0 -1 -1 0
42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 50 205 50 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 152 251 152 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 100 149 237
0 0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 50 205 50 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 142 28 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 36 36 140
255 255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 34 139 34
255 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 4 32 #"widget.rkt::browser-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 59
#"macro-debugger/syntax-browser/properties color-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 87 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 190 190 190
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 185 220 113
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 155 255 155
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 116 116
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 18 67 155 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 30 70 190 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 75 135 185 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 176 208 208
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 116 116 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 125 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 143 15 223 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 141 19 5 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 244 194 71 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 127
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 86 86 86 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
30 3 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 0 0 0 31
31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
0 31 31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1           0 659 0 17 3 58
#"; need a filter function for several of these questions..."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 25 3 1 #" "
0 0 14 3 9 #"predicate"
0 0 25 3 1 #" "
0 0 14 3 14 #"list_to_filter"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"reverse"
0 0 25 3 2 #" ("
0 0 14 3 14 #"filter_execute"
0 0 25 3 1 #" "
0 0 14 3 9 #"predicate"
0 0 25 3 1 #" "
0 0 14 3 14 #"list_to_filter"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 5 #"())))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 48 #"; and a function to actually do the filtering..."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"filter_execute"
0 0 25 3 1 #" "
0 0 14 3 9 #"predicate"
0 0 25 3 1 #" "
0 0 14 3 14 #"list_to_filter"
0 0 25 3 1 #" "
0 0 14 3 3 #"res"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" (("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 14 #"list_to_filter"
0 0 25 3 2 #") "
0 0 14 3 3 #"res"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 9 #"predicate"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 14 #"list_to_filter"
0 0 25 3 3 #")) "
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 14 #"filter_execute"
0 0 25 3 1 #" "
0 0 14 3 9 #"predicate"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 14 #"list_to_filter"
0 0 25 3 4 #")  ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 14 #"list_to_filter"
0 0 25 3 2 #") "
0 0 14 3 3 #"res"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 14 #"filter_execute"
0 0 25 3 1 #" "
0 0 14 3 9 #"predicate"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 14 #"list_to_filter"
0 0 25 3 3 #")  "
0 0 14 3 3 #"res"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 9        1573 22           0 0           0 261 0 22 3 2 #"2."
0 0 25 3 1 #" "
0 0 14 3 10 #"findremove"
0 0 25 3 1 #" "
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 5 #"Write"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 8 #"function"
0 0 25 3 1 #" "
0 0 14 3 10 #"findremove"
0 0 25 3 1 #" "
0 0 14 3 5 #"which"
0 0 25 3 1 #" "
0 0 14 3 5 #"takes"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 2 #"of"
0 0 25 3 1 #" "
0 0 14 3 7 #"numbers"
0 0 25 3 1 #" "
0 0 14 3 3 #"and"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 5 #"value"
0 0 25 3 1 #" "
0 0 14 3 3 #"and"
0 0 25 3 1 #" "
0 0 14 3 7 #"returns"
0 0 25 3 1 #" "
0 0 14 3 3 #"the"
0 0 25 3 1 #" "
0 0 14 3 4 #"same"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 14 3 4 #"with"
0 0 25 3 1 #" "
0 0 14 3 3 #"all"
0 0 25 3 1 #" "
0 0 14 3 11 #"occurrences"
0 0 25 3 1 #" "
0 0 14 3 2 #"of"
0 0 25 3 1 #" "
0 0 14 3 3 #"the"
0 0 25 3 1 #" "
0 0 14 3 9 #"specified"
0 0 25 3 1 #" "
0 0 14 3 5 #"value"
0 0 25 3 1 #" "
0 0 14 3 7 #"removed"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 14 3 2 #"it"
0 0 25 3 1 #" "
0 0 14 3 7 #"exists."
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 1 #"("
0 0 14 3 10 #"findremove"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 22 3 2 #"38"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 22 3 2 #"38"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 1 #"("
0 0 14 3 10 #"findremove"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 22 3 2 #"38"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #") "
0 0 22 3 2 #"20"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"38"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 1 #"("
0 0 14 3 10 #"findremove"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 22 3 2 #"38"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #") "
0 0 22 3 1 #"5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 22 3 2 #"38"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 1 #"("
0 0 14 3 10 #"findremove"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 22 3 1 #"5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 1 #"("
0 0 14 3 10 #"findremove"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #") "
0 0 22 3 1 #"2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 14 3 3 #"For"
0 0 25 3 1 #" "
0 0 14 3 7 #"testing"
0 0 25 3 1 #" "
0 0 14 3 9 #"purposes:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"findremove"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 22 3 2 #"38"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"findremove"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 22 3 2 #"38"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #") "
0 0 22 3 2 #"20"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"findremove"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 22 3 2 #"38"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #") "
0 0 22 3 1 #"5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"findremove"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 22 3 1 #"5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"findremove"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #") "
0 0 22 3 1 #"2"
0 0 25 3 1 #")"
0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"findremove"
0 0 25 3 1 #" "
0 0 14 3 3 #"lst"
0 0 25 3 1 #" "
0 0 14 3 4 #"item"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"filter"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 3 #"not"
0 0 25 3 1 #"("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 4 #"item"
0 0 25 3 4 #"))) "
0 0 14 3 3 #"lst"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 9        1219 22           0 0           0 202 0 22 3 2 #"3."
0 0 25 3 1 #" "
0 0 14 3 3 #"zip"
0 0 25 3 1 #" "
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 9 #"Implement"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 8 #"function"
0 0 25 3 1 #" "
0 0 14 3 3 #"zip"
0 0 25 3 1 #" "
0 0 14 3 5 #"which"
0 0 25 3 1 #" "
0 0 14 3 5 #"takes"
0 0 25 3 1 #" "
0 0 14 3 2 #"an"
0 0 25 3 1 #" "
0 0 14 3 9 #"arbitrary"
0 0 25 3 1 #" "
0 0 14 3 6 #"number"
0 0 25 3 1 #" "
0 0 14 3 2 #"of"
0 0 25 3 1 #" "
0 0 14 3 5 #"lists"
0 0 25 3 1 #" "
0 0 14 3 2 #"as"
0 0 25 3 1 #" "
0 0 14 3 5 #"input"
0 0 25 3 1 #" "
0 0 14 3 3 #"and"
0 0 25 3 1 #" "
0 0 14 3 7 #"returns"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 2 #"of"
0 0 25 29 1 #"\n"
0 0 14 3 5 #"those"
0 0 25 3 1 #" "
0 0 14 3 6 #"lists."
0 0 25 3 2 #" ("
0 0 14 3 5 #"Hint:"
0 0 25 3 1 #" "
0 0 14 3 4 #"this"
0 0 25 3 1 #" "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 14 3 4 #"much"
0 0 25 3 1 #" "
0 0 14 3 7 #"simpler"
0 0 25 3 1 #" "
0 0 14 3 4 #"than"
0 0 25 3 1 #" "
0 0 14 3 3 #"you"
0 0 25 3 1 #" "
0 0 14 3 6 #"think."
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 1 #"("
0 0 14 3 3 #"zip"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"(("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 1 #"("
0 0 14 3 3 #"zip"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"(("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 3 #") ("
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 14 3 3 #"For"
0 0 25 3 1 #" "
0 0 14 3 7 #"testing"
0 0 25 3 1 #" "
0 0 14 3 9 #"purposes:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 3 #"zip"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 3 #"zip"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 2 #"))"
0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 3 #"zip"
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 14 3 9 #"args-list"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 14 3 9 #"args-list"
0 0 25 3 2 #") "
0 0 17 3 38 #"; I can't believe how simple this was!"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 9        1183 22           0 0           0 196 0 22 3 2 #"4."
0 0 25 3 1 #" "
0 0 14 3 5 #"unzip"
0 0 25 3 1 #" "
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 9 #"Implement"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 8 #"function"
0 0 25 3 1 #" "
0 0 14 3 5 #"unzip"
0 0 25 3 1 #" "
0 0 14 3 5 #"which"
0 0 25 3 1 #" "
0 0 14 3 5 #"given"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 3 #"and"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 6 #"number"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 7 #"returns"
0 0 25 3 1 #" "
0 0 14 3 3 #"the"
0 0 25 3 1 #" "
0 0 14 3 3 #"nth"
0 0 25 3 1 #" "
0 0 14 3 4 #"item"
0 0 25 3 1 #" "
0 0 14 3 2 #"in"
0 0 25 3 1 #" "
0 0 14 3 3 #"the"
0 0 25 3 1 #" "
0 0 14 3 5 #"list."
0 0 25 29 1 #"\n"
0 0 14 3 6 #"Return"
0 0 25 3 1 #" "
0 0 14 3 3 #"the"
0 0 25 3 1 #" "
0 0 14 3 5 #"empty"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 14 3 3 #"the"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #" "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 14 3 3 #"out"
0 0 25 3 1 #" "
0 0 14 3 2 #"of"
0 0 25 3 1 #" "
0 0 14 3 6 #"range."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 1 #"("
0 0 14 3 5 #"unzip"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"( ("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 3 #") ("
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 4 #" )) "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 1 #"("
0 0 14 3 5 #"unzip"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"( ("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 3 #") ("
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 4 #" )) "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 14 3 3 #"For"
0 0 25 3 1 #" "
0 0 14 3 7 #"testing"
0 0 25 3 1 #" "
0 0 14 3 9 #"purposes:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 5 #"unzip"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"( ("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 3 #") ("
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 4 #" )) "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 5 #"unzip"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"( ("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 3 #") ("
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 4 #" )) "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"unzip"
0 0 25 3 1 #" "
0 0 14 3 3 #"lst"
0 0 25 3 1 #" "
0 0 14 3 5 #"place"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 110
(5
 #";(list-ref lst place))  <-- this is one way to do it, it's the built-"
 #"in way, but if we were to make our own..."
) 0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 29 #"; ...it would look like this:"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 25 3 1 #" "
0 0 14 3 5 #"place"
0 0 25 3 4 #")   "
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 3 #"lst"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 5 #"unzip"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 3 #"lst"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 5 #"place"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 9        1255 22           0 0           0 208 0 22 3 2 #"5."
0 0 25 3 1 #" "
0 0 14 3 10 #"cancellist"
0 0 25 3 1 #" "
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 9 #"Implement"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 8 #"function"
0 0 25 3 1 #" "
0 0 14 3 10 #"cancellist"
0 0 25 3 1 #" "
0 0 14 3 5 #"which"
0 0 25 3 1 #" "
0 0 14 3 5 #"given"
0 0 25 3 1 #" "
0 0 14 3 3 #"two"
0 0 25 3 1 #" "
0 0 14 3 5 #"lists"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 4 #"will"
0 0 25 3 1 #" "
0 0 14 3 6 #"remove"
0 0 25 3 1 #" "
0 0 14 3 4 #"from"
0 0 25 3 1 #" "
0 0 14 3 4 #"both"
0 0 25 3 1 #" "
0 0 14 3 5 #"lists"
0 0 25 3 1 #" "
0 0 14 3 3 #"all"
0 0 25 3 1 #" "
0 0 14 3 11 #"occurrences"
0 0 25 29 1 #"\n"
0 0 14 3 2 #"of"
0 0 25 3 1 #" "
0 0 14 3 7 #"numbers"
0 0 25 3 1 #" "
0 0 14 3 9 #"appearing"
0 0 25 3 1 #" "
0 0 14 3 2 #"in"
0 0 25 3 1 #" "
0 0 14 3 5 #"both."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 1 #"("
0 0 14 3 10 #"cancellist"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"(() ())"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 1 #"("
0 0 14 3 10 #"cancellist"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"(("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 1 #"("
0 0 14 3 10 #"cancellist"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"(("
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 22 3 1 #"4"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 1 #"("
0 0 14 3 10 #"cancellist"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"(() ("
0 0 22 3 1 #"4"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 14 3 3 #"For"
0 0 25 3 1 #" "
0 0 14 3 7 #"testing"
0 0 25 3 1 #" "
0 0 14 3 9 #"purposes:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"cancellist"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"cancellist"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"cancellist"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"cancellist"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #"))"
0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 89
(6
 #"; need a set intersection function to determine what to remove in the"
 #" cancellist function"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"intersection"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 6 #"member"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #") "
0 0 14 3 1 #"b"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #") ("
0 0 14 3 12 #"intersection"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #") "
0 0 14 3 1 #"b"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 12 #"intersection"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #") "
0 0 14 3 1 #"b"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"cancellist"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 6 #"filter"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 3 #"not"
0 0 25 3 1 #"("
0 0 14 3 6 #"member"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 2 #" ("
0 0 14 3 12 #"intersection"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 5 #")))) "
0 0 14 3 1 #"a"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 6 #"filter"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 3 #"not"
0 0 25 3 1 #"("
0 0 14 3 6 #"member"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 2 #" ("
0 0 14 3 12 #"intersection"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 5 #")))) "
0 0 14 3 1 #"b"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 9        1465 22           0 0           0 243 0 22 3 2 #"6."
0 0 25 3 1 #" "
0 0 14 3 7 #"compose"
0 0 25 3 1 #" "
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 5 #"Write"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 8 #"function"
0 0 25 3 1 #" "
0 0 14 3 7 #"compose"
0 0 25 3 1 #" "
0 0 14 3 5 #"which"
0 0 25 3 1 #" "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 15 3 7 #"defined"
0 0 25 3 1 #" "
0 0 14 3 2 #"to"
0 0 25 3 1 #" "
0 0 14 3 7 #"perform"
0 0 25 3 1 #" "
0 0 14 3 3 #"the"
0 0 25 3 1 #" "
0 0 14 3 4 #"same"
0 0 25 3 1 #" "
0 0 14 3 8 #"function"
0 0 25 3 1 #" "
0 0 14 3 2 #"as"
0 0 25 3 1 #" "
0 0 14 3 2 #"in"
0 0 25 3 1 #" "
0 0 14 3 5 #"slide"
0 0 25 3 1 #" "
0 0 22 3 2 #"29"
0 0 25 3 1 #" "
0 0 14 3 2 #"of"
0 0 25 3 1 #" "
0 0 14 3 3 #"the"
0 0 25 3 1 #" "
0 0 14 3 7 #"Subpro-"
0 0 25 29 1 #"\n"
0 0 14 3 4 #"gram"
0 0 25 3 1 #" "
0 0 14 3 8 #"lecture."
0 0 25 3 1 #" "
0 0 14 3 4 #"That"
0 0 25 3 1 #" "
0 0 14 3 2 #"is"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 2 #"it"
0 0 25 3 1 #" "
0 0 14 3 6 #"should"
0 0 25 3 1 #" "
0 0 14 3 6 #"return"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 8 #"function"
0 0 25 3 1 #" "
0 0 14 3 4 #"that"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 15 3 4 #"when"
0 0 25 3 1 #" "
0 0 14 3 7 #"invoked"
0 0 25 3 1 #" "
0 0 14 3 3 #"and"
0 0 25 3 1 #" "
0 0 14 3 8 #"supplied"
0 0 25 3 1 #" "
0 0 14 3 2 #"an"
0 0 25 3 1 #" "
0 0 14 3 8 #"argument"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 4 #"will"
0 0 25 29 1 #"\n"
0 0 14 3 7 #"execute"
0 0 25 3 1 #" "
0 0 14 3 3 #"the"
0 0 25 3 1 #" "
0 0 14 3 8 #"function"
0 0 25 3 1 #" "
0 0 14 3 11 #"composition"
0 0 25 3 1 #" "
0 0 14 3 4 #"with"
0 0 25 3 1 #" "
0 0 14 3 3 #"the"
0 0 25 3 1 #" "
0 0 14 3 8 #"argument"
0 0 25 3 1 #" "
0 0 14 3 2 #"as"
0 0 25 3 1 #" "
0 0 14 3 6 #"input."
0 0 25 3 1 #" "
0 0 14 3 3 #"For"
0 0 25 3 1 #" "
0 0 14 3 7 #"example"
0 0 29 3 1 #","
0 0 25 3 2 #" ("
0 0 14 3 7 #"compose"
0 0 25 3 1 #" "
0 0 14 3 3 #"inc"
0 0 25 3 1 #" "
0 0 14 3 3 #"inc"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 6 #"should"
0 0 25 3 1 #" "
0 0 14 3 8 #"evaluate"
0 0 25 3 1 #" "
0 0 14 3 2 #"to"
0 0 25 3 1 #" "
0 0 27 3 12 #"#<procedure>"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 7 #"whereas"
0 0 25 3 3 #" (("
0 0 14 3 7 #"compose"
0 0 25 3 1 #" "
0 0 14 3 3 #"inc"
0 0 25 3 1 #" "
0 0 14 3 3 #"inc"
0 0 25 3 2 #") "
0 0 22 3 1 #"5"
0 0 25 3 2 #") "
0 0 14 3 6 #"should"
0 0 25 3 1 #" "
0 0 14 3 8 #"evaluate"
0 0 25 3 1 #" "
0 0 14 3 2 #"to"
0 0 25 3 1 #" "
0 0 22 3 2 #"7."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 14 3 3 #"For"
0 0 25 3 1 #" "
0 0 14 3 7 #"testing"
0 0 25 3 1 #" "
0 0 14 3 9 #"purposes:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 7 #"compose"
0 0 25 3 1 #" "
0 0 14 3 3 #"inc"
0 0 25 3 1 #" "
0 0 14 3 3 #"inc"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"(("
0 0 14 3 7 #"compose"
0 0 25 3 1 #" "
0 0 14 3 3 #"inc"
0 0 25 3 1 #" "
0 0 14 3 3 #"inc"
0 0 25 3 2 #") "
0 0 22 3 1 #"5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 14 3 3 #"For"
0 0 25 3 1 #" "
0 0 14 3 7 #"testing"
0 0 25 3 1 #" "
0 0 14 3 8 #"purposes"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"one"
0 0 25 3 1 #" "
0 0 14 3 6 #"should"
0 0 25 3 1 #" "
0 0 14 3 6 #"return"
0 0 25 3 1 #" "
0 0 22 3 2 #"16"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 6 #"second"
0 0 25 3 1 #" "
0 0 14 3 3 #"one"
0 0 25 3 1 #" "
0 0 14 3 6 #"should"
0 0 25 3 1 #" "
0 0 14 3 6 #"return"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 3 #"and"
0 0 25 3 1 #" "
0 0 14 3 11 #"apply-twice"
0 0 25 3 1 #" "
0 0 14 3 2 #"by"
0 0 25 3 1 #" "
0 0 14 3 6 #"itself"
0 0 25 3 1 #" "
0 0 14 3 6 #"should"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                            "
0 0 14 3 8 #"evaluate"
0 0 25 3 1 #" "
0 0 14 3 2 #"to"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 15 3 6 #"lambda"
0 0 25 3 1 #" "
0 0 14 3 8 #"function"
0 0 25 3 1 #")"
0 0 14 3 1 #":"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"(("
0 0 14 3 11 #"apply-twice"
0 0 25 3 1 #" "
0 0 14 3 6 #"square"
0 0 25 3 2 #") "
0 0 22 3 1 #"2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"(("
0 0 14 3 11 #"apply-twice"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 4 #"))) "
0 0 22 3 1 #"5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 11 #"apply-twice"
0 0 25 3 1 #")"
0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 3 #"inc"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"compose"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 25 3 1 #" "
0 0 14 3 1 #"z"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 1 #"x"
0 0 25 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 1 #"z"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"square"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"apply-twice"
0 0 25 3 1 #" "
0 0 14 3 8 #"function"
0 0 25 3 3 #") ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 8 #"function"
0 0 25 3 2 #" ("
0 0 14 3 8 #"function"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 9        2443 22           0 0           0 406 0 22 3 2 #"7."
0 0 25 3 1 #" "
0 0 14 3 3 #"map"
0 0 25 3 1 #" "
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"A"
0 0 25 3 1 #" "
0 0 14 3 10 #"well-known"
0 0 25 3 1 #" "
0 0 14 3 8 #"function"
0 0 25 3 1 #" "
0 0 14 3 5 #"among"
0 0 25 3 1 #" "
0 0 14 3 3 #"the"
0 0 25 3 1 #" "
0 0 14 3 10 #"functional"
0 0 25 3 1 #" "
0 0 14 3 9 #"languages"
0 0 25 3 1 #" "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 14 3 4 #"map."
0 0 25 3 1 #" "
0 0 14 3 4 #"This"
0 0 25 3 1 #" "
0 0 14 3 8 #"function"
0 0 25 3 1 #" "
0 0 14 3 7 #"accepts"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 5 #"unary"
0 0 25 29 1 #"\n"
0 0 14 3 8 #"function"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 3 #"and"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 2 #"l1"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 2 #"ln"
0 0 25 3 1 #" "
0 0 14 3 2 #"as"
0 0 25 3 1 #" "
0 0 14 3 6 #"inputs"
0 0 25 3 1 #" "
0 0 14 3 3 #"and"
0 0 25 3 1 #" "
0 0 14 3 9 #"evaluates"
0 0 25 3 1 #" "
0 0 14 3 2 #"to"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 3 #"new"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 1 #"("
0 0 14 3 2 #"l1"
0 0 25 3 1 #")"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 1 #"("
0 0 14 3 2 #"ln"
0 0 25 3 1 #")"
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 14 3 5 #"Write"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 7 #"similar"
0 0 25 29 1 #"\n"
0 0 14 3 8 #"function"
0 0 25 3 1 #" "
0 0 14 3 4 #"map2"
0 0 25 3 1 #" "
0 0 14 3 5 #"which"
0 0 25 3 1 #" "
0 0 14 3 7 #"accepts"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 2 #"j1"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 2 #"jn"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 7 #"another"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 4 #"\342\204\2231"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 29 3 1 #"."
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 4 #"\342\204\223n"
0 0 25 3 2 #" ("
0 0 14 3 4 #"note"
0 0 25 3 1 #" "
0 0 14 3 4 #"they"
0 0 25 3 1 #" "
0 0 14 3 3 #"are"
0 0 25 3 1 #" "
0 0 14 3 2 #"of"
0 0 25 3 1 #" "
0 0 14 3 5 #"equal"
0 0 25 3 1 #" "
0 0 14 3 6 #"length"
0 0 25 3 1 #")"
0 0 29 3 1 #","
0 0 25 29 1 #"\n"
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 5 #"unary"
0 0 25 3 1 #" "
0 0 14 3 9 #"predicate"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 3 #"and"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 5 #"unary"
0 0 25 3 1 #" "
0 0 14 3 8 #"function"
0 0 25 3 1 #" "
0 0 14 3 2 #"f."
0 0 25 3 1 #" "
0 0 14 3 2 #"It"
0 0 25 3 1 #" "
0 0 14 3 6 #"should"
0 0 25 3 1 #" "
0 0 14 3 8 #"evaluate"
0 0 25 3 1 #" "
0 0 14 3 2 #"to"
0 0 25 3 1 #" "
0 0 14 3 2 #"an"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 7 #"element"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 5 #"which"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 15 3 3 #"for"
0 0 25 3 1 #" "
0 0 14 3 3 #"all"
0 0 25 29 1 #"\n"
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 2 #"<="
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 14 3 2 #"<="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 6 #"yields"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 1 #"("
0 0 14 3 4 #"\342\204\223i"
0 0 25 3 2 #") "
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #"("
0 0 14 3 2 #"ji"
0 0 25 3 2 #") "
0 0 14 3 5 #"holds"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 2 #"or"
0 0 25 3 1 #" "
0 0 14 3 4 #"\342\204\223i"
0 0 25 3 1 #" "
0 0 14 3 10 #"otherwise."
0 0 25 29 1 #"\n"
0 0 14 3 8 #"Example:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"map2"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 3 #") ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #")) "
0 0 14 3 3 #"inc"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 6 #"should"
0 0 25 3 1 #" "
0 0 14 3 6 #"yield:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #")"
0 0 29 3 1 #"."
0 0 25 29 1 #"\n"
0 0 14 3 12 #"Additionally"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 4 #"your"
0 0 25 3 1 #" "
0 0 14 3 8 #"solution"
0 0 25 3 1 #" "
0 0 14 3 6 #"should"
0 0 25 3 1 #" "
0 0 14 3 8 #"evaluate"
0 0 25 3 1 #" "
0 0 14 3 2 #"to"
0 0 25 3 1 #" "
0 0 14 3 2 #"an"
0 0 25 3 1 #" "
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 14 3 7 #"message"
0 0 25 3 2 #" ("
0 0 14 3 4 #"i.e."
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 6 #"string"
0 0 25 3 2 #") "
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 14 3 3 #"the"
0 0 25 3 1 #" "
0 0 14 3 3 #"two"
0 0 25 3 1 #" "
0 0 14 3 5 #"lists"
0 0 25 3 1 #" "
0 0 14 3 3 #"are"
0 0 25 3 1 #" "
0 0 14 3 3 #"not"
0 0 25 3 1 #" "
0 0 14 3 2 #"of"
0 0 25 3 1 #" "
0 0 14 3 3 #"the"
0 0 25 3 1 #" "
0 0 14 3 4 #"same"
0 0 25 3 1 #" "
0 0 14 3 5 #"size."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 14 3 3 #"For"
0 0 25 3 1 #" "
0 0 14 3 7 #"testing"
0 0 25 3 1 #" "
0 0 14 3 9 #"purposes:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"map2"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 3 #") ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #")) "
0 0 14 3 3 #"inc"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"map2"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 3 #") ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #")) "
0 0 14 3 3 #"inc"
0 0 25 3 1 #")"
0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"map2"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 9 #"predicate"
0 0 25 3 1 #" "
0 0 14 3 8 #"function"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 3 #") ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 5 #"quote"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"Lists"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 22 #"of different lengths.\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 3 #") ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 9 #"predicate"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 8 #"function"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 4 #")) ("
0 0 14 3 4 #"map2"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 2 #") "
0 0 14 3 9 #"predicate"
0 0 25 3 1 #" "
0 0 14 3 8 #"function"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 3 #") ("
0 0 14 3 4 #"map2"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 2 #") "
0 0 14 3 9 #"predicate"
0 0 25 3 1 #" "
0 0 14 3 8 #"function"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"          ))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 9        1159 22           0 0           0 192 0 22 3 2 #"8."
0 0 25 3 1 #" "
0 0 14 3 7 #"getitem"
0 0 25 3 1 #" "
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 5 #"Write"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 8 #"function"
0 0 25 3 1 #" "
0 0 14 3 7 #"getitem"
0 0 25 3 1 #" "
0 0 14 3 5 #"which"
0 0 25 3 1 #" "
0 0 14 3 5 #"given"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 3 #"and"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 10 #"zero-based"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 9 #"retreives"
0 0 25 3 1 #" "
0 0 14 3 3 #"the"
0 0 25 3 1 #" "
0 0 14 3 4 #"item"
0 0 25 3 1 #" "
0 0 14 3 4 #"from"
0 0 25 3 1 #" "
0 0 14 3 3 #"the"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 14 3 2 #"at"
0 0 25 3 1 #" "
0 0 14 3 4 #"that"
0 0 25 3 1 #" "
0 0 14 3 6 #"index."
0 0 25 3 1 #" "
0 0 14 3 6 #"Should"
0 0 25 3 1 #" "
0 0 14 3 6 #"return"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 1 #" "
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 14 3 3 #"the"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #" "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 14 3 3 #"out"
0 0 25 3 1 #" "
0 0 14 3 2 #"of"
0 0 25 3 1 #" "
0 0 14 3 7 #"bounds."
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 1 #"("
0 0 14 3 7 #"getitem"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #") "
0 0 22 3 1 #"2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 22 3 1 #"3"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 1 #"("
0 0 14 3 7 #"getitem"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 22 3 1 #"1"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 1 #"("
0 0 14 3 7 #"getitem"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #") "
0 0 22 3 1 #"6"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 22 3 2 #"#f"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 14 3 3 #"For"
0 0 25 3 1 #" "
0 0 14 3 7 #"testing"
0 0 25 3 1 #" "
0 0 14 3 9 #"purposes:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 7 #"getitem"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #") "
0 0 22 3 1 #"2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 7 #"getitem"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 7 #"getitem"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #") "
0 0 22 3 1 #"6"
0 0 25 3 1 #")"
0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 84
(7
 #"; almost the same idea as unzip, except it needs the error handling i"
 #"f out of bounds"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"getitem"
0 0 25 3 1 #" "
0 0 14 3 3 #"lst"
0 0 25 3 1 #" "
0 0 14 3 5 #"place"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 2 #";("
0 0 17 3 3 #"lis"
0 0 17 3 1 #"t"
0 0 17 3 2 #"-r"
0 0 17 3 1 #"e"
0 0 17 3 1 #"f"
0 0 17 3 1 #" "
0 0 17 3 3 #"lst"
0 0 17 3 1 #" "
0 0 17 3 9 #"place))  "
0 0 17 3 4 #";<--"
0 0 17 3 1 #" "
0 0 17 3 4 #"this"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 3 #"one"
0 0 17 3 1 #" "
0 0 17 3 3 #"way"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 55 #" do it...but it doesn't return #f if it's out of bounds"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 2 #"<="
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 5 #"place"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 3 #"lst"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 3 #")) "
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 25 3 1 #" "
0 0 14 3 5 #"place"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 3 #"lst"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 7 #"getitem"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 3 #"lst"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 5 #"place"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 22 3 2 #"#f"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      )"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  )"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"first"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"second"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0           0
